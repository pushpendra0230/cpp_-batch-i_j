cpp assignment date 10 dec 2024..............
==================================================================
1.Merge two sorted arrays, but only up to the first n/2 elements of each.  
Array A: [1, 3, 5, 7]
Array B: [2, 4, 6, 8]
First n/2 elements: A = [1, 3], B = [2, 4]
Merged: [1, 2, 3, 4]

#include<bits/stdc++.h>
using namespace std;
int main()
{
    vector<int> arr1 = {1, 3, 5, 7};
    vector<int> arr2 = {2, 4, 6, 8};
    int i = 0, j = 0;
    vector<int> newarr;

    while (i < arr1.size()/2 && j < arr2.size()/2)
    {
        if (arr1[i] < arr2[j])
        {
            newarr.push_back(arr1[i]);
            i++;
        }
        else
        {
            newarr.push_back(arr2[j]);
            j++;
        }
    }

    while (i < arr1.size()/2)
    {
        newarr.push_back(arr1[i]);
        i++;
    }

    while (j < arr2.size()/2)
    {
        newarr.push_back(arr2[j]);
        j++;
    }

    for (auto it : newarr)
    {
        cout << it << " ";
    }
    return 0;
}
==================================================================
2.Check if each number is a palindrome.  

Array: [121, 232, 345, 454,1221,345]
Result: [Yes, Yes, No, Yes, No,Yes]


#include<bits/stdc++.h>
using namespace std;
int main()
{
    vector<int> pal={121,232,345,454,1221,345};
    vector<string>ans;
    for (int i=0;i<pal.size();i++)
    {
        int temp=pal[i],rem=0;
        while(temp!=0)
        {
             rem=rem*10+temp%10;
             temp/=10;
        }
        if(rem==pal[i])
        {
            ans.push_back("yes");
        }
        else
        {
            ans.push_back("no");
        }
    }
    for (auto it:ans)
    {
        cout<<it<<" ";
    }
    return 0;
}
==================================================================
3.Move all zeros in an array to the end without changing the order of non-zero elements.  
Array: [0, 5, 0, 3, 4, 0, 1]
Output: [5, 3, 4, 1, 0, 0, 0]

#include <bits/stdc++.h>
using namespace std;
int main() 
{
    vector<int>arr={0,5,0,3,4,0,1};
    int n=arr.size();
    int index=0;
    for (int i=0;i<n;i++) 
    {
        if (arr[i] != 0)
        {
            arr[index++]=arr[i];
        }
    }
    while(index<n) 
    {
        arr[index++]=0;
    }
    for(int i=0;i<n;i++) 
    {
        cout<<arr[i]<<" ";
    }
    return 0;
}
==================================================================
4.Replace each element in the array with the product of all other elements.

Array: [1, 2, 3, 4]
Output: [24, 12, 8, 6]

#include<bits/stdc++.h>
using namespace std;
int main()
{
    vector<int>cir={1,2,3,4};
    int mul=1;
    for (auto it:cir)
    {
        mul*=it;
    }
    for(int i=0;i<cir.size();i++)
    {
         cir[i]=mul/cir[i];
    }
    for(auto it :cir)
    {
        cout<<it<<" ";
    }
    return 0;
}
==================================================================
5.Find the smallest missing positive integer in an unsorted array.  
Array: [3, 4, -1, 1]
Output: 2

#include <bits/stdc++.h>
using namespace std;
int main() 
{
    vector<int>Mis={3,4,-1,1};
    int num=0,max=Mis[0];
    for(int i=0;i<Mis.size();i++) 
    {
        if(Mis[i]>0) 
        {
            num+=Mis[i];
        }
        if (max<Mis[i]) 
        {
            max=Mis[i];
        }
    }
    int result=((max/2)*(max+1))-num;
    cout<<result;
    return 0;
}
==================================================================