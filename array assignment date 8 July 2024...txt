array assignment date 8 July 2024......
================================================================================================================
q.1. create an array of float with 10 dataas in it using indexing wala method.

#include<bits/stdc++.h>
using namespace std;
int main()
{
    float n=10;
    vector<float>arr(n) ;
    cout<<"enter the value for print the number : \n";
    for(float i=0;i<n;i++)
    {
        cin>>arr[i];
    }
    for(float i=0;i<n;i++)
    {
        cout<<arr[i]<<" ";
    }
}
output:-
enter the value for print the number : 
.45
4.6
4.7
3.5
5.8
5.9
9.7
6.4
3.2
1.1
0.45 4.6 4.7 3.5 5.8 5.9 9.7 6.4 3.2 1.1 
=================================================================================================
q.2.create an array of int with 10 datas in it using indexing wala method.....

#include<bits/stdc++.h>
using namespace std;
int main()
{
    int n=10;
    vector<int>arr(n) ;
    cout<<"enter the value for print the number : \n";
    for(int i=0;i<n;i++)
    {
        cin>>arr[i];
    }
    for(int i=0;i<n;i++)
    {
        cout<<arr[i]<<" ";
    }
}
output:-
enter the value for print the number : 
1
2
3
4
5
6
7
8
9
33
1 2 3 4 5 6 7 8 9 33 
==================================================================================
q.3.create an array of strings with 10 datas in it using indexing wala method.

#include<bits/stdc++.h>
using namespace std;
int main()
{
    int n=10;
    vector<string>arr(n) ;
    cout<<"enter the value for print the number : \n";
    for(int i=0;i<n;i++)
    {
        cin>>arr[i];
    }
    for(int i=0;i<n;i++)
    {
        cout<<arr[i]<<" ";
    }
}
output:-
enter the value for print the number : 
rohan
sohan
ram
ramesh
soni
rakhi
pushpendra
prajjal
rahul
ranu
rohan sohan ram ramesh soni rakhi pushpendra prajjal rahul ranu 
=============================================================================================
q.4.create an array of float with 10 dataas in it using indexing wala method.


#include<bits/stdc++.h>
using namespace std;
int main()
{
    float n=10;
    vector<float>arr(n) ;
    cout<<"enter the value for print the number : \n";
    for(auto &it:arr)
    {
        cin>>it;
    }
    for(auto it:arr)
    {
        cout<<it<<" ";
    }
}
output:-
enter the value for print the number : 
44.5
3.4
6.5
3.5
7.7 
8.9
4.3
2.3
1.1 
9.9
44.5 3.4 6.5 3.5 7.7 8.9 4.3 2.3 1.1 9.9 
===================================================================================
q.5.create an array of int with 10 datas in it using indexing wala method.

#include<bits/stdc++.h>
using namespace std;
int main()
{
    int n=10;
    vector<int>arr(n) ;
    cout<<"enter the value for print the number : \n";
    for(auto &it:arr)
    {
        cin>>it;
    }
    for(auto it:arr)
    {
        cout<<it<<" ";
    }
}
output:-
enter the value for print the number : 
1
2
3
4
5
6
7
8
9
33
1 2 3 4 5 6 7 8 9 33 
==========================================================================================================
q.6.create an array ofstrings with 10 datas in it using indexing wala method.

#include<bits/stdc++.h>
using namespace std;
int main()
{
    int n=10;
    vector<string>arr(n) ;
    cout<<"enter the value for print the number : \n";
    for(auto &it:arr)
    {
        cin>>it;
    }
    for(auto it:arr)
    {
        cout<<it<<" ";
    }
}
output:-

enter the value for print the number : 
rahul
ramesh
sohel
rohan
ram
pushpendra
prajjal
rakhi
esha
vikash
rahul ramesh sohel rohan ram pushpendra prajjal rakhi esha vikash 
=========================================================================================================
q.7.Take 5 inputs from the user and calculate their sum. If the sum is greater than 50, call a function that counts the number of occurrences of a specific integer in an array. If the sum is less than 50, call a function to find the last occurrence of a specific integer in an array. If the sum is exactly 50, call a function that takes an array of integers and returns an array containing the squares of each element.



#include<bits/stdc++.h>
using namespace std;

// Function to count occurrences of 'key' in 'arr'
int countOccurrences(vector<int>& arr, int key)
{
    int count = 0;
    for (int i = 0; i < arr.size(); i++) 
    {
        if (arr[i] == key) 
        {
            count++;
        }
    }
    return count;
}

// Function to find the last occurrence of 'key' in 'arr'
int lastOccurrence(vector<int>& arr, int key) 
{
    int index = -1;
    for (int i = 0; i < arr.size(); i++) 
    {
        if (arr[i] == key) 
        {
            index = i;
        }
    }
    return index;
}

// Function to return square of all elements in 'arr'
vector<int> squareElements(vector<int>& arr) 
{
    vector<int> squaredArr(arr.size());
    for (int i = 0; i < arr.size(); i++)
    {
        squaredArr[i] = arr[i] * arr[i];
    }
    return squaredArr;
}

int main() 
{
    // Take 5 inputs from the user
    vector<int> arr(5);
    int sum = 0;
    cout << "Enter 5 integers: \n";
    for (int i = 0; i < 5; i++)
    {
        cin >> arr[i];
        sum += arr[i];
    }

    // If the sum of the 5 inputs is greater than 50
    if (sum > 50) 
    {
        vector<int> arr2 = {19, 68, 68, 22, 32, 45, 78, 68};
        int key = 68;
        int occurrences = countOccurrences(arr2, key);
        cout << "Number of occurrences of " << key << ": " << occurrences << "\n";
    }
    // If the sum of the 5 inputs is less than 50
    else if (sum < 50) 
    {
        vector<int> arr2 = {19, 68, 68, 22, 32, 45, 78, 68};
        int key = 68;
        int lastIndex = lastOccurrence(arr2, key);
        cout << "Last occurrence of " << key << ": " << lastIndex << "\n";
    } 
    // If the sum of the 5 inputs is exactly 50
    else 
    {
        vector<int> arr2 = {19, 68, 68, 22, 32, 45, 78, 68};
        vector<int> squaredArr = squareElements(arr2);
        cout << "Squared elements: ";
        for (int num : squaredArr)
        {
            cout << num << " ";
        }
        cout << "\n";
    }
    
    return 0;
}

output:-
Enter 5 integers: 
30
5
5
5
5
Squared elements: 361 4624 4624 484 1024 2025 6084 4624 
=====================================================================================================================
q.8. Take 6 inputs from the user and calculate their average. If the average is greater than 20, call a function that finds the maximum value in an array of integers. If the average is less than 20, call a function to find the minimum value in an array of floats. If the average is exactly 20, call a function that takes an array of strings and returns the length of each string...........


#include<bits/stdc++.h>
using namespace std;
// Function to find the maximum value in an index of array of integers
int findMaxValue(vector<int>& arr) 
{
    int maxVal;
    for (int num : arr)
    {
        if (num > maxVal) 
        {
            maxVal = num;
        }
    }
    return maxVal;
}


// Function to find the minimum value in an index of  array of floats
float findMinValue(vector<float>& arr) 
{
    float minVal;
    for (float num : arr) 
    {
        if (num < minVal)
        {
            minVal = num;
        }
    }
    return minVal;
}

// Function to return the length of each string in an index of  array of strings
vector<int> getStringLengths(vector<string>& arr)
{
    vector<int> lengths;
    for (string str : arr) 
    {
        lengths.push_back(str.length());
    }
    return lengths;
}
// user se 6 integers lena
int main() 
{
    vector<int> userInputs(6);
    int sum = 0;
    cout << "Enter 6 integers: \n";
    for (int i = 0; i < 6; i++)
    {
        cin >> userInputs[i];
        sum += userInputs[i];
    }
// all integersko sum karna fir unke averageke liye unke total number se divide karna 
    double average = sum / 6.0;

    if (average > 20) 
    {
        vector<int> intArr = {19, 68, 45, 22, 32, 78, 90};
        int maxVal = findMaxValue(intArr);
        cout << "Maximum value in the array: " << maxVal << "\n";
    } 
    else if (average < 20) 
    {
        vector<float> floatArr = {19.5, 68.3, 45.2, 22.1, 32.4, 78.9};
        float minVal = findMinValue(floatArr);
        cout << "Minimum value in the array: " << minVal <<"\n";
    } 
    else
    {
        vector<string> strArr = {"rahul", "rohan", "rakesh", "prajjal", "pushpendra"};
        vector<int> lengths = getStringLengths(strArr);
        cout << "Lengths of each string: ";
        for (int len : lengths) 
        {
            cout << len << " ";
        }
        cout <<"\n";
    }
    return 0;
}

output:-


Enter 6 integers: 
20
20
20
20
20
20
Lengths of each string: 5 5 6 7 10 
===========================================================================================================
q.9.Take 4 inputs from the user and calculate their sum. If the sum is greater than 100, call a function that counts the number of even numbers in an array. If the sum is less than 100, call a function to find the first occurrence of a specific string in an array. If the sum is exactly 100, call a function that takes an array of integers and returns the product of all elements.....

#include<bits/stdc++.h>
using namespace std;

// Function ko separate karna aor print karna even and odd numbers mai 
void evenOdd(vector<int>& arr)
{
    vector<int> evenArr;
    vector<int> oddArr;
    for (auto it : arr)
    {
        if (it % 2 == 0)
        {
            evenArr.push_back(it);
        }
        else
        {
            oddArr.push_back(it);
        }
    }
    cout << "Even numbers: ";
    for (auto it : evenArr)
    {
        cout << it << " ";
    }
    cout <<"\n" << "Odd numbers: ";
    for (auto it : oddArr)
    {
        cout << it << " ";
    }
    cout << "\n";
}

// Function for serach the first occurrence of 'key' in 'arr'
int firstOccurrence(vector<string>& arr, string key) 
{
    int index = -1;
    for (int i = 0; i < arr.size(); i++) 
    {
        if (arr[i] == key) 
        {
            index = i;
            break; // Stop searching once key is found
        }
    }
    return index;
}

// Function for return the product of all elements in 'arr' like sub elements ko multiply karna
int productOfElements(vector<int>& arr) 
{
    int product = 1;
    for (int i = 0; i < arr.size(); i++)
    {
        product *= arr[i];
    }
    return product;
}

int main() 
{
    // user se 4 input lene ke liye 
    vector<int> arr(4);
    int sum = 0;
    cout << "Enter 4 integers: \n";
    for (int i = 0; i < 4; i++)
    {
        cin >> arr[i];
        sum += arr[i];
    }

    // If 4 input ka sum 100 se jyada hota h 
    if (sum > 100) 
    {
        vector<int> arr2 = {19, 68, 68, 22, 32, 45, 78, 68};
        evenOdd(arr2);
    }
    // If 4 input ka sum 100 se kam hota h 
    else if (sum < 100) 
    {
        vector<string> arr2 = { "rahul", "rohan", "pushpendra", "prajjal","rakhi","ram"};
        string key = "prajjal";
        int firstIndex = firstOccurrence(arr2, key);
        cout << "First occurrence of \"" << key << "\": " << firstIndex <<"";
    } 
    // If 4 input ka sum 100 ke barabar hota h 
    else 
    {
        vector<int> arr2 = {19, 68, 68, 22, 32, 45, 78, 68};
        int product = productOfElements(arr2);
        cout << "Product of elements: " << product <<"\n";
    }
    
    return 0;
}
output:-
Enter 4 integers: 
4
5
6
7
First occurrence of "prajjal": 3
========================================================================================================================
q.10.Take 7 inputs from the user and calculate their average. If the average is greater than 30, call a function that counts the number of odd numbers in an array. If the average is less than 30, call a function to find the sum of all positive numbers in an array of floats. If the average is exactly 30, call a function that takes an array of integers and returns an array with each element multiplied by 2.......



#include <bits/stdc++.h>
using namespace std;

// Function ko separate karna aor print karna odd numbers mai 
int countOddNumbers(vector<int>& arr)
{
    int count = 0;
    for (auto it : arr)
    {
        if (it % 2 != 0)
        {
            count++;
        }
    }
    return count;
}

 // Function for find  the sum od all positive number in the array float
float sumOfPositive(vector<float>& arr) 
{
    float sum = 0.0;
    for (auto it : arr)
    {
        if (it > 0)
        {
            sum += it;
        }
    }
    return sum;
}

// Function that returns each element multiplied by 2
vector<int> multiplyByTwo(vector<int>& arr)
{
    vector<int> ans(arr.size());  
    for(int i = 0; i < arr.size(); i++)
    {
       ans[i] = arr[i] * 2;
    }
    return ans;
}

int main() 
{
    // User se 7 inputs lene ke liye 
    vector<int> arr(7);
    int sum = 0;
    cout << "Enter 7 integers: \n";
    for (int i = 0; i < 7; i++)
    {
        cin >> arr[i];
        sum += arr[i];
    }
    
    // Calculate average
    float average = sum / 7.0;
    cout << "Average of the 7 integers: " << average << "\n";

    // If 7 input ka average 30 se jyada hota h 
    if (average > 30) 
    {
        vector<int> arr2 = {19, 68, 68, 22, 32, 45, 78, 68};
        int oddCount = countOddNumbers(arr2);
        cout << "Number of odd numbers: " << oddCount << "\n";
    }
    // If 7 input ka average 30 se kam hota h 
    else if (average < 30) 
    {
        vector<float> arr2 = {19.5, -68.2, 68.4, 22.1, 32.0, -45.6, 78.8, 68.9};
        float positiveSum = sumOfPositive(arr2);
        cout << "Sum of positive numbers: " << positiveSum << "\n";
    }
    // If 7 input ka average 30 ke barabar hota h 
    else 
    {
        vector<int> arr2 = {19, 68, 68, 22, 32, 45, 78, 68};
        vector<int> result = multiplyByTwo(arr2);
        cout << "Array with each element multiplied by 2: ";
        for (auto it : result)
        {
            cout << it << " ";
        }
        cout << "\n";
    }

    return 0;
}

output:-
Enter 7 integers: 
30
30
30
30
30
30
30
Average of the 7 integers: 30
Array with each element multiplied by 2: 38 136 136 44 64 90 156 136 
=============================================================================================================
q.11.Take 5 inputs from the user and calculate their sum. If the sum is greater than 75, call a function that counts the number of vowels in an array of strings. If the sum is less than 75, call a function to find the sum of the first and last elements in an array of integers. If the sum is exactly 75, call a function that takes an array of floats and returns an array containing only the numbers greater than the average of the array.....

// Take 6 inputs from the user and calculate their sum. If the sum is greater than 60,
// call a function that counts the number of elements greater than a specified value in an array.
// If the sum is less than 60, call a function to find the minimum value in an array of integers.
// If the sum is exactly 60, call a function that takes an array of floats and
// returns the average of elements less than a specified value.


#include<bits/stdc++.h>
using namespace std;
vector<float> average(vector<float>&arr)
{
    vector<float>newarr;
    float sum=0.0;
    float avrg=0.0;
    for(auto it: arr)
    {
        sum+=it;
        avrg=sum/arr.size();
    }
    for(auto it: arr)
    {
        if(it>avrg)
        {
            newarr.push_back(it);
        }
    }
    return newarr;
}
float summation(vector<float> &arr)
{
    float sum=arr[0]+arr[arr.size()-1];
    return sum;
}
int countofVowels(vector<string>&arry)
{
    int count=0;
    for(auto &it:arry)
    {
        for(char a:it)
        {
        a=tolower(a);
        if(a=='a'|| a=='e' ||  a=='i' || a=='o' || a=='u')
        {
            count++;
        }
        }
    }
    return count;
}
int main()
{
    int sum=0;
    vector<int>arr(5);
    cout<<"Enter the numbers : ";
    for(auto &it:arr)
    {
        cin>>it;
    }
    for(auto it:arr)
    {
        sum=sum+it;
    }
    if(sum>75)
    {
        vector<string>arry={"ram","rahul","pushpendra","prajjal"}; 
        cout<<"The value of vowels in given array is : "<<countofVowels(arry);
    }
    else if(sum<75)
    {
        vector<float>arr={1.2,23.4,4.2,6.34,9.4,12.7};
        cout<<"The sum of first and last element is : "<<summation(arr);
    }
    else
    {
        vector<float>arr={2.3,4.5,6.6,1.1,7.7,8.8};
        vector<float>ary=average(arr);
        for(auto it:ary)
        {
            cout<<it<<" ";
        }
    }
}

Enter the numbers : 44
33
44
33
44
The value of vowels in given array is : 8
========================================================================================================================
q.12.Take 8 inputs from the user and calculate their average. If the average is greater than 40, call a function that counts the number of occurrences of a specific character in an array of strings. If the average is less than 40, call a function to find the last occurrence of a specific float in an array. If the average is exactly 40, call a function that takes an array of integers and returns an array containing only the even numbers......


#include<bits/stdc++.h> 
using namespace std; 

vector<int> lengtharr(vector<string>&arr,string &key)
{
    vector<int>newarr;
    int count;
    for(auto str:arr)
    {
        count=0;
            for(auto it:str)
            {
                if(it=='p')
                {
                    count++;
                }
            }
        newarr.push_back(count);
    }
    return newarr;
}
vector<int>evenarr(vector<int>&arr) 
{ 
    vector<int>newarr; 
    int sum=0; 
    int avrg=0; 
    for(auto it: arr)
    { 
        sum+=it; 
        avrg=sum/arr.size(); 
    } 
    for(auto it: arr)
    { 
        if(it%2==0)
        { 
            newarr.push_back(it); 
        } 
    } 
    return newarr; 
} 
int lastoccurrence(vector<float>&arr,float &key)
{ 
    int findex = -1; 
    for(int i = 0 ; i<arr.size() ; i++)
    { 
        if(arr[i]==key)
        { 
            findex = i; 
        } 
    } 
    return findex; 
} 

int main()
{
    float sum=0.0,avrg=0.0; 
    vector<int>arr(8);
    cout<<"Enter the number :\n";
    for(auto &it:arr)
    {
        cin>>it;
    }    
    for(auto it:arr)
    {
        sum=sum+it;
        avrg=sum/arr.size();
    }
    if(avrg>40)
    {
        vector<string>arr={"prajjal","rahul","prajjal","pushpendra","rakhi"};
        string key="h";
        vector<int>newarr=lengtharr(arr,key);
        for(auto it:newarr)
        {
            cout<<it<<" ";
        }
    }
    else if(avrg<40)
    {
        vector<float>arr = {14.5,14.5,14.5,76.5,88.5,14.5,77.8,34.8,14.5}; 
        float key  = 14.5; 
        cout<<"last occurrence : "<<lastoccurrence(arr,key);
    }
    else
    {
        vector<int>arr = {48,4,3,56,78,77,65,89,98,99,23}; 
        vector<int>ary=evenarr(arr); 
        for(auto it:ary)
        { 
            cout<<it<<" "; 
        } 
    }
}

output:-
Enter the number :
2
3
2
3
2
3
2
3
last occurrence : 8
=========================================================================================================================
q.13.Take 6 inputs from the user and calculate their sum. If the sum is greater than 60, call a function that counts the number of elements greater than a specified value in an array. If the sum is less than 60, call a function to find the minimum value in an array of integers. If the sum is exactly 60, call a function that takes an array of floats and returns the average of elements less than a specified value.......

#include<bits/stdc++.h>
using namespace std;

// Function to find the minimum element in a vector
int minofarr(vector<int>& arr) 
{
    int min = arr[0];
    for (int i = 1; i < arr.size(); i++) 
    {
        if (min > arr[i]) 
        {
            min = arr[i];
        }
    }
    return min;
}

// Function to count the number of elements greater than a specified value in an array
int countGreaterThan(vector<int>& arr, int key) 
{
    int count = 0;
    for (int num : arr) 
    {
        if (num > key)
        {
            count++;
        }
    }
    return count;
}

// Function to calculate the average of elements less than a specified value in an array of floats
float averageLessThan(vector<float>& arr, float key) 
{
    float sum = 0;
    int count = 0;
    for (float num : arr)
    {
        if (num < key) 
        {
            sum += num;
            count++;
        }
    }
    if (count == 0) return 0;
    return sum / count;
}

int main() 
{
    vector<int> inputs(6);
    int sum = 0;

    cout << "Enter 6 integers: ";
    for (int i = 0; i < 6; i++) 
    {
        cin >> inputs[i];
        sum += inputs[i];
    }

    if (sum > 60) 
    {
        vector<int> arr = {12, 25, 7, 30, 19, 10};
        int key = 20;
        int count = countGreaterThan(arr, key);
        cout << "Number of elements greater than " <<key << " is: " << count << endl;
    } 
    else if (sum < 60) 
    {
        vector<int> arr = {12, 13, 10, 50, 80, 39};
        cout << "Minimum value in the array: " << minofarr(arr) << endl;
    }
    else 
    {
        vector<float> arr = {12.5, 13.5, 10.2, 50.8, 80.6, 39.9};
        float key = 30.0;
        float avg = averageLessThan(arr, key);
        cout << "Average of elements less than " << key << " is: " << avg << endl;
    }
    return 0;
}
output:-
Enter 6 integers: 60
0
0
0
0
0
Average of elements less than 30 is: 12.0667
==========================================================================================================================
q.14.Take 3 inputs from the user and calculate their sum. If the sum is greater than 25, call a function that counts the number of elements in an array of strings. If the sum is less than 25, call a function to find the maximum value in an array of floats. If the sum is exactly 25, call a function that takes an array of integers and returns an array containing the cubes of each element.......




#include<bits/stdc++.h>
using namespace std;

int countalltheElements(const vector<string>& arr) 
{
    return arr.size();
}

float findMax(const vector<float>& arr) 
{
    float maxVal = arr[0];
    for (float num : arr) 
    {
        if (num > maxVal) 
        {
            maxVal = num;
        }
    }
    return maxVal;
}
vector<int> cubeArray(const vector<int>& arr)
{
    vector<int> cubearr;
    for (int num : arr) 
    {
        cubearr.push_back(num * num * num);
    }
    return cubearr;
}

int main() 
{
    vector<int> arr(3);
    cout << "Enter three integers: ";
    for (auto &it : arr)
    {
        cin >> it;
    }
    int sum = 0;
    for (auto it : arr)
    {
        sum += it;
    }

    if (sum > 25)
    {
        vector<string> strArr = { "ram", "rahul", "prajjal", "pushpendra" };
        cout << "The number of elements in the array is: " << countalltheElements(strArr) << "\n";
    }
    else if (sum < 25)
    {
        vector<float> floatArr = { 1.1,3.6,4.5,3.8,8.9 };
        cout << "The maximum value in the array is: " << findMax(floatArr) << "\n";
    }
    else 
    {
        vector<int> intArr = { 1, 2, 3, 4, 5 };
        vector<int> cubearr = cubeArray(intArr);
        cout << "The cubes of the elements in the array are: ";
        for (int num : cubearr) 
        {
            cout << num << " ";
        }
        cout <<"\n";
    }
    return 0;
}
output:-
Enter three integers: 10
10
5
The cubes of the elements in the array are: 1 8 27 64 125 
========================================================================================================================
q.15.Take 5 inputs from the user and calculate their average. If the average is greater than 15, call a function that counts the number of negative numbers in an array of integers. If the average is less than 15, call a function to find the first occurrence of a specific float in an array. If the average is exactly 15, call a function that takes an array of strings and returns the concatenation of all elements.....................




#include <bits/stdc++.h> 
using namespace std; 

// If the average is exactly 15
string concatenationStrings(const vector<string>& n) 
{ 
    string sum; 
    for(const auto& str : n)
    { 
        sum += str; 
    } 
    return sum; 
} 

// If the average is less than 15
int findFirstOccurrence(const vector<int>& m, int key) 
{ 
    for(int i = 0; i < m.size(); ++i) 
    { 
        if(m[i] == key) 
        { 
            return i; 
        } 
    } 
    return -1; //  -1 if key nahi milti h 
} 

// If the average is greater than 15
int countNegativeNumbers(const vector<int>& m) 
{ 
    int count = 0; 
    for(int num : m) 
    { 
        if(num < 0) 
        { 
            ++count; 
        } 
    } 
    return count; 
} 
int main() 
{ 
    int n = 5; 
    int sum = 0; 
    float avg; 
    vector<int> arr(n); 
    cout << "Enter five numbers:\n"; 
    for(int i = 0; i < n; ++i) 
    { 
        cin >> arr[i]; 
        sum += arr[i]; 
    } 
    avg = static_cast<float>(sum) / n; 
    cout << "Average: " << avg << "\n"; 
    
    if(avg > 15) 
    { 
        vector<int> m = {-1, -2, -4, -5, -6, -2}; 
        cout << "Number of negative numbers: " << countNegativeNumbers(m) << "\n"; 
    } 
    else if(avg < 15) 
    { 
        vector<int> m = {1, 2, 3, 4, 5, 6, 7}; 
        int key = 4; 
        int index = findFirstOccurrence(m, key); 
        cout << "First occurrence of " << key << ": " << (index != -1 ? to_string(index) : "not found") << "\n"; 
    } 
    else 
    { 
        vector<string> n = {"ram", "rohan", "raman", "prajjal", "pushpendra"}; 
        string concatenatedString = concatenationStrings(n); 
        cout << "Concatenated string: " << concatenatedString << "\n"; 
    } 

    return 0; 
}


output:-
Enter five numbers:
15
15
15
15
15
Average: 15
Concatenated string: ramrohanramanprajjalpushpendra
========================================================================================================================
q.16.Take 4 inputs from the user and calculate their sum. If the sum is greater than 45, call a function that counts the number of elements divisible by 5 in an array of integers. If the sum is less than 45, call a function to find the last occurrence of a specific string in an array. If the sum is exactly 45, call a function that takes an array of floats and returns the sum of elements greater than a specified value.............

#include<bits/stdc++.h>
using namespace std;

int divisible(vector<int>&arr)
{
    int count=0;
    for(int num: arr)
    {
        if(num%5==0)
        {
            count++;
        }
    }
    return count;
} 

float sumofElement(vector<float>&arr,float &key)
{
    float sum=0.0;
    for(auto it: arr)
    {
        if(it > key)
        {
            sum+=it;
        }
    }
    return sum;
}
int lastocc(vector<string>&arr,string key)
{
    int lindex=-1;
    for(int i=1;i<arr.size();i++)
    {
        if(arr[i]==key)
        {
            lindex=i;
        }
    }
    return lindex;
}
int main()
{
    int sum=0;
    vector<int>arr(4);
    cout<<"Enter the numbers : ";
    for(auto &it:arr)
    {
        cin>>it;
    }
    for(auto it:arr)
    {
        sum=sum+it;
    }
    if(sum==45)
    {
        vector<float>arr={1.1,2.2,3.3,4.4,5.5,6.6,7.7,8.8,9.9};
        float key=1.1;
        cout<<"Sum of elements is : "<<sumofElement(arr,key);
    }
    else if(sum<45)
    {
        vector<string>arr={"prajjal","Ravi","pushpendra","prajjal","Mohit","prajjal","pushpendra","prajjal","pushpendra"};
        string key="prajjal";
        cout<<"The last occurence is : "<<lastocc(arr,key);
    }
    else if(sum>45) 
    {
    vector<int>arr={11,33,45,55,65,34,77,75,8,85,99,95};
    cout<<"count of number which are divisible by 5 is : "<<divisible(arr);
    }
}

output:-
Enter the numbers : 2
3
2
3
The last occurence is : 7
===========================================================================================================================================
q.17.Take an input from the user. If the input is a multiple of 3, call a function that finds the maximum value in an array of floats. If the input is a multiple of 4, call a function that counts the number of elements in an array of integers that are greater than a specified value. If the input is zero, call a function that returns the length of each string in an array of strings........

#include <bits/stdc++.h>
using namespace std;

vector<int> stringlengtharr(vector<string>& arr)
{
    vector<int> ans(arr.size());
    for (int i = 0; i < arr.size(); ++i)
    {
        ans[i] = arr[i].length(); 
    }
    return ans;
}

float maximumoffloat(vector<float>& arr)
{
    float maxi = arr[0];
    for (auto it : arr)
    {
        if (maxi < it)
        {
            maxi = it;
        }
    }
    return maxi;
}

int maximumofkeyarr(vector<float>& arr, float key)
{
    int count = 0;
    for (auto it : arr)
    {
        if (key > it)
        {
            count++;
        }
    }
    return count;
}

bool ismultipleof(int n, int m)
{
    return (n % m == 0);
}

int main()
{
    int n;
    cout << "Enter an integer value for n: ";
    cin >> n;

    if (n == 0)
    {
        vector<string> stringarr = {"Ram", "Shayam", "Hari", "Gopal", "Kishan", "Laxman", "Verma"};
        vector<int> ans = stringlengtharr(stringarr);
        cout << "Lengths of strings in the array: ";
        for (auto it : ans)
        {
            cout << it << " ";
        }
        cout << "\n";
    }
    else if (ismultipleof(n, 4))
    {
        vector<float> arrfloat = {15.5, 22.5, 23.6, 0.5, 96.6, 0.2, 0.9};
        float key;
        cout << "Enter a float value for key: ";
        cin >> key;
        cout << "Count of elements less than key: " << maximumofkeyarr(arrfloat, key) << "\n";
    }
    else if (ismultipleof(n, 3))
    {
        vector<float> arrfloat = {14.5, 22.5, 23.6, 0.5, 96.6, 0.2, 0.9};
        cout << "Maximum of float array: " << maximumoffloat(arrfloat) << "\n";
    }
    else
    {
        cout << "The value of n is not correct . \n";
    }
    return 0;
}
output:-
Enter an integer value for n: 0
Lengths of strings in the array: 3 6 4 5 6 6 5 
=======================================================================================================================
q.18.Take an input from the user. If the input is greater than 100, call a function that finds the first occurrence of a specific integer in an array. If the input is less than 100, call a function that counts the number of elements in an array of floats that are less than a specified value. If the input is exactly 100, call a function that returns an array of integers with each element incremented by 1......



#include<bits/stdc++.h>
using namespace std;

// Function to find the first occurrence of a specific integer in an array
int findFirstOccurrence(vector<int>& arr, int target)
{
    for (int i = 0; i < arr.size(); ++i)
    {
        if (arr[i] == target) 
        {
            return i; 
        }
    }
    return -1; // Return -1 agar targetnahi milta h 
}

// Function to count elements in a float array that are less than a specified value
int countElementsLessThan(vector<float>& arr, float value)
{
    int count = 0;
    for (auto num : arr) 
    {
        if (num < value) 
        {
            count++;
        }
    }
    return count;
}

// har ek element ko 1 se Increment karna .
vector<int> incrementArray(vector<int>& arr)
{
    vector<int> result;
    for (int num : arr) 
    {
        result.push_back(num + 1); 
    }
    return result;
}

int main()
{
    int input;
    cout << "Enter an integer value: ";
    cin >> input;

    if (input > 100)
    {
        // Call function to find first occurrence of a specific integer in an array
        vector<int> arr = {10, 20, 30, 40, 50, 30, 70};
        int target = 30;
        int index = findFirstOccurrence(arr, target);
        if (index != 0) 
        {
            cout << "First occurrence of " << target << " is at index: " << index << "\n";
        }
        else 
        {
            cout << "Target not found in the array.\n";
        }
    }
    else if (input < 100)
    {
        // Call function to count elements in a float array that are less than a specified value
        vector<float> floatArr = {14.5, 22.5, 23.6, 0.5, 96.6, 0.2, 0.9};
        float value = 10.0;
        int count = countElementsLessThan(floatArr, value);
        cout << "Number of elements less than " << value << " in float array: " << count << "\n";
    }
    else if (input == 100)
    {
        // Call function to increment each element of an integer array by 1
        vector<int> intArr = {44, 55, 66, 77, 88};
        vector<int> result = incrementArray(intArr);
        cout << "Array after incrementing each element by 1: ";
        for (auto num : result)
        {
            cout << num << " ";
        }
        cout << "\n";
    }
    else
    {
        cout << "Invalid input! Please enter a valid integer for run the code .\n";
    }

    return 0;
}

output:-
Enter an integer value: 100
Array after incrementing each element by 1: 45 56 67 78 89 
========================================================================================================================
q.19.Take an input from the user. If the input is even, call a function that counts the number of even numbers in an array of integers. If the input is odd, call a function that finds the last occurrence of a specific integer in an array. If the input is zero, call a function that returns an array of integers multiplied by 3................




#include<bits/stdc++.h>
using namespace std;

// Function for count the number of even numbers in an array
int countEvenNumbers(vector<int>& arr) 
{
    int count = 0;
    for(auto it : arr) 
    {
        if(it % 2 == 0) 
        {
            count++;
        }
    }
    return count;
}

// Function to find the last occurrence of a specific integer in an array
int findLastOccurrence(vector<int>& arr, int target) 
{
    for(int i = arr.size() - 1; i >= 0; i--)
    {
        if(arr[i] == target) 
        {
            return i;
        }
    }
    return -1; 
}

// Function to return an array of integers multiplied by 3
vector<int> multiplyByThree(vector<int>& arr) 
{
    vector<int> result;
    for(auto it : arr) 
    {
        result.push_back(it * 3);
    }
    return result;
}

int main() 
{
    vector<int> arr = {12, 4, 55, 67, 89, 90, 10, 45, 85, 22};
    
    int input;
    cout << "Enter an integer: ";
    cin >> input;

    if(input == 0) 
    {
        vector<int> result = multiplyByThree(arr);
        cout << "Array multiplied by 3: ";
        for(auto it : result) 
        {
            cout << it << " ";
        }
        cout << "\n";
    }
    else if(input % 2 == 0) 
    {
        int evenCount = countEvenNumbers(arr);
        cout << "Number of even numbers: " << evenCount << "\n";
    }
    else 
    {
        int target;
        cout << "Enter the target integer to find its last occurrence: ";
        cin >> target;
        int lastIndex = findLastOccurrence(arr, target);
        if(lastIndex != 0) 
        {
            cout << "Last occurrence of " << target << " is at index " << lastIndex << "\n";
        }
        else
        {
            cout << target << " is not found in the array.\n";
        }
    }
    return 0;
}

output:-
Enter an integer: 7
Enter the target integer to find its last occurrence: 89
Last occurrence of 89 is at index 4
======================================================================================================================================================
q.20.Take an input from the user. If the input is a prime number, call a function that counts the number of occurrences of a specific string in an array of strings. If the input is not a prime number, call a function that finds the minimum value in an array of integers. If the input is zero, call a function that returns an array of integers squared.


#include<bits/stdc++.h>
using namespace std;

// Function to find the minimum element in a vector 
int minofarr(vector<int>& arr) 
{
    int min = arr[0];
    for (int i = 1; i < arr.size(); i++) 
    {
        if (min > arr[i]) 
        {
            min = arr[i];
        }
    }
    return min;
}

// prime number h ki nahi dekhne ke liye 
bool isprime(int i) 
{
    if (i <= 1) return false;
    for (int k = 2; k < i; k++) 
    {
        if (i % k == 0) 
        {
            return false;
        }
    }
    return true;
}

// Function to count occurrences of a specific string in an array of strings
// dekhne ke liye ki string m ek hi word kitni baar aaya h 
int countOccurrences(vector<string>& arr, const string& result) 
{
    int count = 0;
    for (const string& str : arr) 
    {
        if (str == result) 
        {
            count++;
        }
    }
    return count;
}

// Function if user zero input deta h to  square each element in an array of integers
vector<int> squareArray(vector<int>& arr) 
{
    vector<int> squared;
    for (int num : arr)
    {
        squared.push_back(num * num);
    }
    return squared;
}

int main() 
{
    int input;
    cout << "Enter a number: ";
    cin >> input;

    if (input == 0) 
    {
        vector<int> arr = {1, 2, 3, 4, 5};
        vector<int> squared = squareArray(arr);
        cout << "Squared array: ";
        for (int num : squared) 
        {
            cout << num << " ";
        }
        cout << "\n";
    }
    else if (isprime(input)) 
    {
        vector<string> arr = {"prajjal", "pushpendra", "rahul", "prajjal", "pushpendra"};
        string result = "prajjal";
        int count = countOccurrences(arr, result);
        cout << "The string '" << result << "' occurs " << count << " times." <<"\n";
    }
    else
    {
        vector<int> arr = {120, 138, 100, 500, 805, 399};
        cout << "Minimum value in the array: " << minofarr(arr) <<"\n";
    }
    return 0;
}
output:-
Enter a number: 16
Minimum value in the array: 100
============================================================================================================================================================================================
