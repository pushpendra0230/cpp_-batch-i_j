cpp assimgmemt advance loop with functions date 15 feb 2024:-
===========================================================================================================
q.1. Write a program to print the first 10 even numbers.......

#include <bits/stdc++.h>
using namespace std;
void even(int num)
{
    cout<<"The even number's is :\n";
    for(int i=0; i<=10; i+=2)
    cout<<i<<" ";
}
int main()
{
    int num=10;
    even(num);
    return 0;
}
output:-
The even number's is :
0 2 4 6 8 10 
------------------------------------------------------------------------------------
q.2. Create a program to print the multiplication table of a given number......


#include <bits/stdc++.h>
using namespace std;
void table(int num)
{
    for(int i=1; i<=10; i++)
    cout<<num<<" * "<<i<<" = "<<num*i<<"\n";
}
int main()
{
    int num;
    cout<<"enter the number :\n";
    cin>>num;
    cout<<"The table of " <<num<<" is :\n";
    table(num);
    return 0;
}
output:-
enter the number :
5
The table of 5 is :
5 * 1 = 5
5 * 2 = 10
5 * 3 = 15
5 * 4 = 20
5 * 5 = 25
5 * 6 = 30
5 * 7 = 35
5 * 8 = 40
5 * 9 = 45
5 * 10 = 50
--------------------------------------------------------------------------------------------------------
q.3. Write a program to calculate the factorial of a given number......


#include <bits/stdc++.h>
using namespace std;
int factorial(int num)
{
    int fact=1;
    for(int i=1; i<=num; i++)
    {
    fact=fact*i;
    }
    return fact;
}
int main()
{
    int num;
    cout<<"Enter the number: ";
    cin>>num;
    int factanswer=factorial(num);
    cout<<"The factorial of given number is: "<<factanswer;
    return 0;
}
output:-
Enter the number: 5
The factorial of given number is: 120
------------------------------------------------------------------------------------------------------
q.4. Create a program to find whether a given number is prime or not........


#include <bits/stdc++.h>
using namespace std;
bool checkprimenum(int num)
{
    bool flag=0;
    for(int i=2; i<num; i++)
    {
    if(num%i==0)
    {
        flag=1;
        break;
    }
}
    return flag;
}
int main()
{
    int num;
    cout<<"Enter the number: ";
    cin>>num;
    bool flaganswer=checkprimenum(num);
    if(flaganswer)
    {
        cout<<num<<" is not a Prime number \n";
    }
    else
    {
        cout<<num<<" is a Prime number \n";
    }
    return 0;
}
output:-
Enter the number: 5
5 is a Prime number 
-----------------------------------------------------------------------------------------------------
q.5. Write a program to find the sum of digits of a given number.....

#include <bits/stdc++.h>
using namespace std;
void printsumnum(int num)
{
    int sum=0;
    for(int i=1; i<=num; i++)
    {
        sum=sum+i;
    }
    cout<<"The sum of the given number is: "<<sum;
}
int main()
{
    int num;
    cout<<"Enter the number: ";
    cin>>num;
    printsumnum(num);
    return 0;
}
output:-
Enter the number: 200
The sum of the given number is: 20100
---------------------------------------------------------------------------------------------------
q.6. Create a program to print the Fibonacci series up to a certain limit.....


#include <bits/stdc++.h>
using namespace std;
void Fibonacci(int num)
{
    int num1=0,num2=1,num3=0;
    cout<<num1<<" "<<num2<<" ";
    for(int i=1; i<=num; i++)
    {
        num3=num1+num2;
        cout<<num3<<" ";
        num1=num2;
        num2=num3;
    }
}
int main()
{
    int num;
    cout<<"Enter the number: ";
    cin>>num;
    Fibonacci(num - 2);
    return 0;
}
output:-
Enter the number: 30
0 1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 75025 121393 196418 317811 514229 
----------------------------------------------------------------------------------------------------------------------------------
q.7. Write a program to find the reverse of a given number.......


#include<bits/stdc++.h>
using namespace std;

int digitCount(int num)
{
    int digitcount=0;
     do{
        num/=10;
        digitcount++;
    }while(num!=0);
    return digitcount;
}

void reverse(int num)
{
    int sum=0,lastdigit;
    int original_digits = digitCount(num);
    while(num!=0)
    {
        lastdigit=num%10;
        sum=sum*10+lastdigit;
        num=num/10;
    }
    int ending_digits=digitCount(sum);
    int remaining_digits= original_digits - ending_digits;
    if(remaining_digits!=0)
    {
        for(int i=0;i<remaining_digits;i++)
        {
            cout<<"0";
        }
    }
    cout<<sum;
   
}
int main()
{
    int num,r;
    cout<<"Enter the number you want to get reverse\n";
    cin>>num;
    reverse(num);
}
output:-
Enter the number you want to get reverse
34526346
64362543
---------------------------------------------------------------------------------------------------------------
q.8. Create a program to find the sum of all natural numbers up to a given limit.....


#include <bits/stdc++.h>
using namespace std;
void natural(int num)
{
   int sum=0;
   for(int i=1; i<=num; i++)
   {
       sum=sum+i;
   }
   cout<<sum;
}
int main()
{
    int num;
    cout<<"Enter the number: \n";
    cin>>num;
    cout<< "the sum of the number " <<num<< " is : \n";
    natural(num);
    return 0;
}
output:-
Enter the number: 
20
the sum of the number 20 is : 
210
---------------------------------------------------------------------------------------------------------------------
q.9. Write a program to find the GCD (Greatest Common Divisor) of two given numbers......

#include<bits/stdc++.h>
using namespace std;
int Gcd(int a, int b)
{
    int temp;
    while(b!=0)
    {
        temp = b;
        b=a%b;
        a = temp;
    }
    return a;
}
int main()
{
    int a,b,g;
    cout<<"Enter the value of a and b:\n";
    cin>>a>>b;
    g = Gcd(a,b);
    cout<<"GCD of : "<<a <<" and "<< b<<" is "<<g<<"\n";
}
output:-
Enter the value of a and b:
22
44
GCD of : 22 and 44 is 22
---------------------------------------------------------------------------------------------------------------------
q.10. Create a program to find the LCM (Least Common Multiple) of two given numbers.


#include <bits/stdc++.h>
using namespace std;
int LCM(int num1,int num2)
{
   int LCM=1;
    for(int i=2; i<=num2; i++)
    {
       if( (num1%i==0)  && (num2%i==0)  )
       {
            LCM=LCM*i;
            num1=num1/i;
            num2=num2/i;
       }
        if( num1%i==0)
       {
           LCM=LCM*i;
           num1=num1/i;
       }
        if(num2%i==0)  
       {
           LCM=LCM*i;
           num2=num2/i;
       }
    }
   return LCM;
}
int main()
{
    int num1,num2;
    cout<<"Enter the number: ";
    cin>>num1>>num2;
    int ans_lcm=LCM(num1,num2);
    cout<<"LCM of "<<num1<<" and "<<num2<<" is:"<<ans_lcm;
    return 0;
}
output:-
Enter the number: 9
3
LCM of 9 and 3 is:9
---------------------------------------------------------------------------------------------------------------------
q.11. Write a program to check whether a given number is Armstrong or not.


#include<bits/stdc++.h>
using namespace std;
void checknumarmstrong()
{
    int num,number,last_digit=0,sum=0;
    cout<<"Enter a number: ";
    cin>>number;
    int temp=num;
    while(num>0)
    {
        last_digit=num%10;
        sum=sum+(last_digit*last_digit*last_digit);
        num=num/10;
    }
    if(sum==temp)
    {
        cout<<number<<" is a Armstrong number . \n";
    }
    else
    {
        cout<<number<<" is Not a Armstrong number . \n";
    }
}
int main()
{
    checknumarmstrong();
}
output:-
Enter a number: 153
153 is a Armstrong number . 
---------------------------------------------------------------------------------------------------------------------
q.12.Create a program to print all Armstrong numbers between two given numbers....

#include <bits/stdc++.h>
using namespace std;
int main()
{
    int start, end;
    cout << "Enter the starting number: ";
    cin >> start;
    cout << "Enter the ending number: ";
    cin >> end;
    cout << "Armstrong numbers between " << start << " and " << end << " are:" <<"\n";
    for (int num = start; num <= end; ++num) 
    {
        int originalNum, remainder, result = 0, n = 0;
        originalNum = num;
        while (originalNum != 0)
        {
            originalNum /= 10;
            n++;
        }
        originalNum = num;
        while (originalNum != 0) 
        {
            remainder = originalNum % 10;
            result += pow(remainder, n);
            originalNum /= 10;
        }
        if (result == num)
            cout << num <<"\n";
    }
    return 0;
}
output:-
Enter the starting number: 1
Enter the ending number: 372
Armstrong numbers between 1 and 372 are:
1
2
3
4
5
6
7
8
9
153
370
371
---------------------------------------------------------------------------------------------------------------------
q.13. Write a program to check whether a given number is a palindrome or not...


#include <bits/stdc++.h>
using namespace std;
void checknumpalindrome(int num)
{
 int temp=num,last_digit=0,reverse_num=0;
 while(num>0)
 {
     last_digit=num%10;
     reverse_num=reverse_num*10+last_digit;
     num=num/10;
 }
   if(temp==reverse_num)
   cout<<"Given number is palindrome number . \n";

    else
    cout<<"Given number is not an palindrome number . \n";
}
int main()
{
    int num;
    cout<<"Enter a number: ";
    cin>>num;
    checknumpalindrome(num);
    return 0;
}
output:-
Enter a number: 1234321
Given number is palindrome number . 
---------------------------------------------------------------------------------------------------------------------
q.14.Create a program to print all palindrome numbers between two given numbers......


#include <bits/stdc++.h>
using namespace std;
int main()
{
    int start, end;
    cout << "Enter the starting number: ";
    cin >> start;
    cout << "Enter the ending number: ";
    cin >> end;
    cout << "Palindrome numbers between " << start << " and " << end << " are:" <<"\n";
    for (int num = start; num <= end; ++num)
    {
        int originalNum = num;
        int reversedNum = 0;
        int remainder;
        while (originalNum != 0) 
        {
            remainder = originalNum % 10;
            reversedNum = reversedNum * 10 + remainder;
            originalNum /= 10;
        }
        if (num == reversedNum)
            cout << num << endl;
    }
    return 0;
}
output:-
Enter the starting number: 1
Enter the ending number: 100
Palindrome numbers between 1 and 100 are:
1
2
3
4
5
6
7
8
9
11
22
33
44
55
66
77
88
99
---------------------------------------------------------------------------------------------------------------------
q.15. Write a program to count the number of digits in a given number.....


#include <bits/stdc++.h>
using namespace std;
int countt(long int num)
{
    int count=0;
    while(num>0)
    {
        count++;
        num=num/10;
    }
    return count;
}
int main()
{
   long int num;
   cout<<"Enter a number: ";
   cin>>num;
   int count_ans=countt(num);
   cout<<"The length of Entered number is: "<<count_ans;
    return 0;
}
//with the help of long int we can count more then 10 digits.
output:-
Enter a number: 12345678912345
The length of Entered number is: 14
---------------------------------------------------------------------------------------------------------------------
q.16.Create a program to find the sum of all prime numbers between two given numbers.....


#include <bits/stdc++.h>
using namespace std;

bool isPrime(int num) 
{
    if (num <= 1)
        return false;

    for (int i = 2; i * i <= num; ++i) 
    {
        if (num % i == 0) 
        {
            return false;
        }
    }
    return true;
}
int calculateSumOfPrimes(int start, int end) 
{
    int sum = 0;
    for (int num = start; num <= end; ++num) 
    {
        if (isPrime(num)) 
        {
            sum += num;
        }
    }
    return sum;
}
void printPrimeNumbersAndSum(int start, int end) 
{
    int sum = 0;
    cout << "Prime numbers between " << start << " and " << end << " are:" <<"\n";
    for (int num = start; num <= end; ++num) 
    {
        if (isPrime(num)) 
        {
            cout << num <<"\n";
            sum += num;
        }
    }
    cout << "Sum of prime numbers between " << start << " and " << end << " is: " << sum <<"\n";
}
int main() 
{
    int start, end;
    cout << "Enter the starting number: ";
    cin >> start;
    cout << "Enter the ending number: ";
    cin >> end;
    printPrimeNumbersAndSum(start, end);
    return 0;
}
output:-
Enter the starting number: 1
Enter the ending number: 20
Prime numbers between 1 and 20 are:
2
3
5
7
11
13
17
19
Sum of prime numbers between 1 and 20 is: 77
---------------------------------------------------------------------------------------------------------------------
q.17. Write a program to find the reverse of a given string....


#include <bits/stdc++.h>
using namespace std;
void str_reverse(string str)
{
    string reverse_str;
    for(int i=str.length(); i>=0; i--)
    {
        reverse_str=reverse_str+str[i];
    }
    cout<<reverse_str;
}    
int main()
{
   string str;
   cout<<"Enter a string: ";
   getline(cin,str);
   str_reverse(str);
    return 0;
}
output:-
Enter a string: pushpendra soni
inos ardnephsup
---------------------------------------------------------------------------------------------------------------------
q.18.Create a program to print all prime numbers up to a given limit.....

#include <bits/stdc++.h>
using namespace std;

bool checkPrime(int num) 
{
    if (num <= 1)
        return false;

    for (int i = 2; i * i <= num; i++) 
    {
        if (num % i == 0)
        {
            return false;
        }
    }
    return true;
}
void printPrimeNumbers(int limit) 
{
    cout << "Prime numbers up to " << limit << " are:" <<"\n";
    for (int num = 2; num <= limit; num++)
    {
        if (checkPrime(num)) 
        {
            cout << num <<"\n";
        }
    }
}
int main() 
{
    int limit;
    cout << "Enter the limit: ";
    cin >> limit;
    printPrimeNumbers(limit);
    return 0;
}
output:-
Enter the limit: 20
Prime numbers up to 20 are:
2
3
5
7
11
13
17
19
---------------------------------------------------------------------------------------------------------------------
q.19. Write a program to find the factorial of each digit of a given number and add them....


#include <bits/stdc++.h>
using namespace std;
void print_fact(int num)
{
    int sum=0,last_digit=0;
        while(num>0)
        {
            int fact=1;
            last_digit=num%10;
            for(int i=1; i<=last_digit; i++)
            {
                fact=fact*i;
            }
            sum=sum+fact;
            num=num/10;
        }
        cout<<sum<<" ";
}    
int main()
{
  int num;
  cout<<"Enter a number more than 1 digit: ";
  cin>>num;
  print_fact(num);
    return 0;
}
output:-
Enter a number more than 1 digit: 23
8 
---------------------------------------------------------------------------------------------------------------------
q.20.Create a program to print the Pascal's triangle up to a certain number of rows......

#include <bits/stdc++.h>
using namespace std;
void printPascalsTriangle(int numRows) 
{
    for (int i = 0; i < numRows; i++) 
    {
        int pas = 1;
        for (int space = 1; space <= numRows - i; space++) 
        {
            cout << " ";
        }
        for (int j = 0; j <= i; j++) 
        {
            cout << pas << " ";
            pas = pas * (i - j) / (j + 1);
        }
        cout <<"\n";
    }
}
int main() 
{
    int numRows;
    cout << "Enter the number of rows for Pascal's triangle: ";
    cin >> numRows;
    printPascalsTriangle(numRows);
    return 0;
}
output:-
Enter the number of rows for Pascal's triangle: 5
     1 
    1 1 
   1 2 1 
  1 3 3 1 
 1 4 6 4 1 
---------------------------------------------------------------------------------------------------------------------
q.21. Write a program to print the first N terms of the series: 1, 4, 9, 16, 25, ...n


#include <bits/stdc++.h>
using namespace std;
void printnum(int num)
{  
    for(int i=1; i<=num; i++)
    {
        cout<<i*i<<" ";
    }
}    
int main()
{
  int num;
  cout<<"Enter a number more than 1 digit: ";
  cin>>num;
  printnum(num);
    return 0;
}
output:-
Enter a number more than 1 digit: 30
1 4 9 16 25 36 49 64 81 100 121 144 169 196 225 256 289 324 361 400 441 484 529 576 625 676 729 784 841 900 
---------------------------------------------------------------------------------------------------------------------
q.22. Create a program to find the sum of squares of all even numbers between two given numbers...


#include <bits/stdc++.h>
using namespace std;
void printnum(int start,int end)
{  
    int sum=0;
    for(int i=start; i<=end; i++)
    {
        if(i%2==0){
            sum=sum+pow(i,2);
        }
    }
    cout<<sum;
}    
int main()
{
   int start,end;
   cout<<"Enter the starting and ending range: ";
   cin>>start>>end;
   printnum(start,end);
    return 0;
}
output:-
Enter the starting and ending range: 1 4
20
---------------------------------------------------------------------------------------------------------------------
q.23. Write a program to find the factorial of a given number using function....


#include <bits/stdc++.h>
using namespace std;
void printfact(int num)
{  
    int fact=1;
    for(int i=1; i<=num; i++)
    {
      fact=fact*i;
    }
    cout<<fact;
}    
int main()
{
   int num;
   cout<<"Enter a number for factorial: ";
   cin>>num;
   printfact(num);
    return 0;
}
output:-
Enter a number for factorial: 5
120
---------------------------------------------------------------------------------------------------------------------
q.24.Create a program to generate a pattern like a right-angled triangle using '*' character.....


#include <bits/stdc++.h>
using namespace std;
void printRightTriangle(int rows) 
{
    for (int i = 1; i <= rows; i++) 
    {
        for (int j = 1; j <= i; j++) 
        {
            cout << "* ";
        }
        cout <<"\n";
    }
}
int main() 
{
    int rows;
    cout << "Enter the number of rows for the right triangle: ";
    cin >> rows;
    printRightTriangle(rows);
    return 0;
}
output:-
Enter the number of rows for the right triangle: 5
* 
* * 
* * * 
* * * * 
* * * * * 
---------------------------------------------------------------------------------------------------------------------
q.25.Write a program to calculate the sum of the series: 1 + 1/2 + 1/3 + 1/4 + ... + 1/N......


#include<bits/stdc++.h>
using namespace std;

void sum(int n) 
{
    cout << "Sum of the series: ";
    float s = 0.0;
    for(int i = 1; i <= n; i++) 
    {
        if (i != 1)
            cout << " + ";
        cout << "1/" << i;
        s += 1.0 / i;
    }
    cout << " = " << s;
}
int main() 
{
    int n;
    cout << "Enter the value of N: ";
    cin >> n;
    sum(n);
    return 0;
}
output:-
Enter the value of N: 5
Sum of the series: 1/1 + 1/2 + 1/3 + 1/4 + 1/5 = 2.28333
---------------------------------------------------------------------------------------------------------------------
q.26. Create a program to find the sum of the digits of a number until it becomes a single-digit number...


#include<bits/stdc++.h>
using namespace std;
void lastdigitsum(int num)
{
    int sum=0;
    while(num>0)
    {
        sum=sum+num%10;
        num=num/10;
    }
    if(sum>9)
    {
        num=sum;
        lastdigitsum(num);
    }
    else
    {
        cout<<sum;
    }
}
int main() 
{
    int num;
    cout << "Enter a number: ";
    cin >> num;
    lastdigitsum(num);
    return 0;
}
output:-
Enter a number: 12345
6
---------------------------------------------------------------------------------------------------------------------
q.27.Write a program to check whether a given number is a perfect number or not......


#include <bits/stdc++.h>
using namespace std;
bool isPerfect(int num) 
{
    int sum = 0;
    for (int i = 1; i <= num / 2; i++)
    {
        if (num % i == 0) 
        {
            sum += i;
        }
    }
    return sum == num;
}
int main() 
{
    int number;
    cout << "Enter a number: ";
    cin >> number;
    if (isPerfect(number)) 
    {
        cout << number << " is a perfect number.";
    }
    else 
    {
        cout << number << " is not a perfect number.";
    }
    return 0;
}
output:-
Enter a number: 6
6 is a perfect number.
---------------------------------------------------------------------------------------------------------------------
q.28. Create a program to find the area of a circle given its radius...


#include <bits/stdc++.h>
using namespace std;
float area(int radius)
{  
    float areaa;
    areaa=(3.14159265359)*pow(radius,2);
    return areaa;
}    
int main()
{
   float radius;
   cout<<"Enter radius: ";
   cin>>radius;
   float _area=area(radius);
   cout<<"Area of circle is: "<<_area;
    return 0;
}
output:-
Enter radius: 8
Area of circle is: 201.062
---------------------------------------------------------------------------------------------------------------------
q.29. Write a program to check whether a given year is a leap year or not....


#include <bits/stdc++.h>
using namespace std;

void isLeapYear(int year) 
{
    if((year%400==0)||((year % 4 == 0)&&(year%100!=0)))
    {
        cout<<"leap year";
    }
    else
    {
        cout<<"Not a leap year";
    }
}
int main() 
{
    int year;
    cout << "Enter the year: ";
    cin >> year;
    isLeapYear(year);
    return 0;
}
output:-
Enter the year: 1500
Not a leap year
---------------------------------------------------------------------------------------------------------------------
q.30.Create a program to find the roots of a quadratic equation......

#include <bits/stdc++.h>
using namespace std;
void findRoots(double a, double b, double c) 
{
    double discriminant = b * b - 4 * a * c;
    double root1, root2;
    if (discriminant > 0) 
    {
        root1 = (-b + sqrt(discriminant)) / (2 * a);
        root2 = (-b - sqrt(discriminant)) / (2 * a);
        cout << "Roots are real and different." << endl;
        cout << "Root 1 = " << root1 <<"\n";
        cout << "Root 2 = " << root2 <<"\n";
    }
    else if (discriminant == 0) 
    {
        root1 = root2 = -b / (2 * a);
        cout << "Roots are real and same." <<"\n";
        cout << "Root 1 = Root 2 = " << root1 <<"\n";
    } 
    else
    {
        double realPart = -b / (2 * a);
        double imaginaryPart = sqrt(abs(discriminant)) / (2 * a);
        cout << "Roots are complex and different." << endl;
        cout << "Root 1 = " << realPart << " + " << imaginaryPart << "i" <<"\n";
        cout << "Root 2 = " << realPart << " - " << imaginaryPart << "i" <<"\n";
    }
}
int main() 
{
    double a, b, c;
    cout << "Enter the coefficients of the quadratic equation (a, b, c): \n";
    cin >> a >> b >> c;
    findRoots(a, b, c);
    return 0;
}
output:-
Enter the coefficients of the quadratic equation (a, b, c): 
55
66
77
Roots are complex and different.
Root 1 = -0.6 + 1.0198i
Root 2 = -0.6 - 1.0198i
---------------------------------------------------------------------------------------------------------------------
q.31. Write a program to print all ASCII characters with their corresponding integer values....


#include <bits/stdc++.h>
using namespace std;
int main() 
{
    cout << "ASCII Characters with their Integer Values:\n";
    for (int i = 33; i <= 126; i++) 
    {
     cout << "Integer: " << i << " Character: " << static_cast<char>(i) <<"\n";
    }
    return 0;
}
output:-
ASCII Characters with their Integer Values:
Integer: 33 Character: !
Integer: 34 Character: "
Integer: 35 Character: #
Integer: 36 Character: $
Integer: 37 Character: %
Integer: 38 Character: &
Integer: 39 Character: '
Integer: 40 Character: (
Integer: 41 Character: )
Integer: 42 Character: *
Integer: 43 Character: +
Integer: 44 Character: ,
Integer: 45 Character: -
Integer: 46 Character: .
Integer: 47 Character: /
Integer: 48 Character: 0
Integer: 49 Character: 1
Integer: 50 Character: 2
Integer: 51 Character: 3
Integer: 52 Character: 4
Integer: 53 Character: 5
Integer: 54 Character: 6
Integer: 55 Character: 7
Integer: 56 Character: 8
Integer: 57 Character: 9
Integer: 58 Character: :
Integer: 59 Character: ;
Integer: 60 Character: <
Integer: 61 Character: =
Integer: 62 Character: >
Integer: 63 Character: ?
Integer: 64 Character: @
Integer: 65 Character: A
Integer: 66 Character: B
Integer: 67 Character: C
Integer: 68 Character: D
Integer: 69 Character: E
Integer: 70 Character: F
Integer: 71 Character: G
Integer: 72 Character: H
Integer: 73 Character: I
Integer: 74 Character: J
Integer: 75 Character: K
Integer: 76 Character: L
Integer: 77 Character: M
Integer: 78 Character: N
Integer: 79 Character: O
Integer: 80 Character: P
Integer: 81 Character: Q
Integer: 82 Character: R
Integer: 83 Character: S
Integer: 84 Character: T
Integer: 85 Character: U
Integer: 86 Character: V
Integer: 87 Character: W
Integer: 88 Character: X
Integer: 89 Character: Y
Integer: 90 Character: Z
Integer: 91 Character: [
Integer: 92 Character: \
Integer: 93 Character: ]
Integer: 94 Character: ^
Integer: 95 Character: _
Integer: 96 Character: `
Integer: 97 Character: a
Integer: 98 Character: b
Integer: 99 Character: c
Integer: 100 Character: d
Integer: 101 Character: e
Integer: 102 Character: f
Integer: 103 Character: g
Integer: 104 Character: h
Integer: 105 Character: i
Integer: 106 Character: j
Integer: 107 Character: k
Integer: 108 Character: l
Integer: 109 Character: m
Integer: 110 Character: n
Integer: 111 Character: o
Integer: 112 Character: p
Integer: 113 Character: q
Integer: 114 Character: r
Integer: 115 Character: s
Integer: 116 Character: t
Integer: 117 Character: u
Integer: 118 Character: v
Integer: 119 Character: w
Integer: 120 Character: x
Integer: 121 Character: y
Integer: 122 Character: z
Integer: 123 Character: {
Integer: 124 Character: |
Integer: 125 Character: }
Integer: 126 Character: ~
---------------------------------------------------------------------------------------------------------------------
q.32. Create a program to calculate the power of a given number using function....



#include <bits/stdc++.h>
using namespace std;
int power(int num,int poww)
{
    return pow(num,poww);
}
int main()
    {
            int num,poww;
         cout<<"Enter number and power: ";
         cin>>num>>poww;
         int power_ans=power(num,poww);
         cout<<num<<" power "<<poww<<" is "<<power_ans;
            return 0;
    }
output:-
Enter number and power: 2
4
2 power 4 is 16
--------------------------------------------------------------------------------------------------------------------
q.33.Write a program to find the factorial of a large number using big integers.........


#include<bits/stdc++.h>
using namespace std;
int factorial(int a);
    int main()
        {
        int N; 
        cout<<"Enter a intenger for factorial : \n";
        cin>>N;
        factorial(N);
        return 0;
        }
    int factorial(int a)
    {
    int i, n;
    long long int results = 1;//use long long int for big intenger.
    for (i = 1; i<=a; i++)
        {
           results = results * i;
        }
    cout<<"Factorial of "<<a<<" is "<<results<<"\n";
    return results;
    }
output:-
Enter a intenger for factorial : 
20
Factorial of 20 is 2432902008176640000
---------------------------------------------------------------------------------------------------------------------
q.34.Create a program to find the sum of the series: 1 + x^2/2! + x^3/3! + ... + x^n/n!.........


#include <bits/stdc++.h>
using namespace std;
long long factorial(int n)
{
    if (n == 0)
        return 1;
    long long fact = 1;
    for (int i = 1; i <= n; ++i)
    {
        fact *= i;
    }
    return fact;
}

double calculateSeriesSum(double x, int n) 
{
    double sum = 1.0; 
    for (int i = 2; i <= n; ++i)
    {
        sum += pow(x, i) / factorial(i);
    }
    return sum;
}

int main() 
{
    double x;
    int n;

    cout << "Enter the value of x: ";
    cin >> x;
    cout << "Enter the value of n: ";
    cin >> n;

    double sum = calculateSeriesSum(x, n);
    cout << "Sum of the series up to n terms: " << sum;

    return 0;
}
output:-
Enter the value of x: 1
Enter the value of n: 6
Sum of the series up to n terms: 1.71806
---------------------------------------------------------------------------------------------------------------------
q.35.Write a program to find the sum of the series: 1/1! - 2/2! + 3/3! - 4/4! + ... + N/N!......


#include<bits/stdc++.h>
using namespace std;
int fact(int n)
{
   int f=1;
   for(int i=1;i<=n;i++)
   {
       f*=i;
   }
   return f;
}
void sum(int n)
{
    float s=0.0;
    for(int i=1;i<=n;i++)
    {
        cout<<i<<"/"<<i<<"! +";
        s+=float(i)/fact(i);
    }
    cout<<"\nsummation = "<<s;
}
int main()
{
    int n;
    cout<<"Enter the value of n:\n";
    cin>>n;
    sum(n);
}
output:-
Enter the value of n:
6
1/1! +2/2! +3/3! +4/4! +5/5! +6/6! +
summation = 2.71667
--------------------------------------------------------------------------------------------------------------------
q.36.Create a program to convert a decimal number to binary......


#include<bits/stdc++.h>
using namespace std;
void decimalToBinary(int n) 
{
    if (n == 0) 
    {
        cout << "Binary representation: 0\n";
        return;
    }
    int highestBit = 1;
    while (highestBit <= n / 2) 
    {
        highestBit *= 2;
    }
    cout << "Binary representation: ";
    while (highestBit > 0)
    {
        cout << (n & highestBit ? 1 : 0);
        highestBit /= 2;
    }
    cout <<"\n";
}
int main() 
{
    int decimalNumber;
    cout << "Enter a decimal number: ";
    cin >> decimalNumber;
    decimalToBinary(decimalNumber);
    return 0;
}
output:-
Enter a decimal number: 512
Binary representation: 1000000000
---------------------------------------------------------------------------------------------------------------------
q.37. Write a program to check whether a given number is a happy number or not......

#include<bits/stdc++.h>
using namespace std;
int generateSqaure(int n)
{
    int lastdigit,sum=0;
    while(n!=0)
    {
        lastdigit=n%10;
        sum=sum+pow(lastdigit,2);
        n=n/10;
    }
    return sum;
}
bool happynumber(int n)
{
    if(n<=0)
        return false;
    while(n!=0)
    {
        if(n==1)
             return true;
        else if(n>1 && n<=9)
            return false;
        else
        {
            n=generateSqaure(n);
        }
       
    }
    return false;
   
}
int main()
{
    int n;
    cout<<"Enter the value of n:\n";
    cin>>n;
    if(happynumber(n))
        cout<<"happy number";
    else
        cout<<"UnhappyNumber";
}
output:-
Enter the value of n:
19
happy number
----------------------------------------------------------------------------------------------------------------------------------
q.38.Create a program to find the sum of the squares of the digits of a number until it becomes a single-digit number.......


#include <bits/stdc++.h>
using namespace std;
int sumOfSquaresOfDigits(int n) 
{
    int sum = 0;
    while (n > 0) 
    {
        int digit = n % 10;
        sum += digit * digit;
        n /= 10;
    }
    return sum;
}
int singleDigitSum(int n)
{
    while (n >= 10) 
    {
        n = sumOfSquaresOfDigits(n);
    }
    return n;
}
int main() 
{
    int number;
    cout << "Enter a number: ";
    cin >> number;
    int result = singleDigitSum(number);
    cout << "Single-digit sum: " << result;
    return 0;
}
output:-
Enter a number: 5674
Single-digit sum: 4
---------------------------------------------------------------------------------------------------------------------------------------------
q.39. Write a program to find the factorial of each digit of a given number and add them until it becomes a single-digit number......

#include <bits/stdc++.h>
using namespace std;

long long factorial(int n)
{
    if (n == 0 || n == 1)
        return 1;
    long long fact = 1;
    for (int i = 2; i <= n; i++)
    {
        fact *= i;
    }
    return fact;
}
int findSingleDigitSum(int n)
{
    int sum = 0;
    while (n >= 10) 
    {
        int digit = n % 10;
        sum += factorial(digit);
        n /= 10;
    }
    
    sum += factorial(n);
    
    if (sum >= 10)
        return findSingleDigitSum(sum);
    return sum;
}
int main() 
{
    int number;
    cout << "Enter a number: ";
    cin >> number;
    int singleDigitSum = findSingleDigitSum(number);
    cout << "The sum of factorials of digits until it becomes a single-digit number: " << singleDigitSum;
    return 0;
}
output:-
Enter a number: 10
The sum of factorials of digits until it becomes a single-digit number: 2
--------------------------------------------------------------------------------------------------------------------------
q.40.Create a program to calculate the area of a triangle given its three sides using Heron's formula.......


#include <bits/stdc++.h>
using namespace std;
double calculateTriangleArea(double a, double b, double c)
{
    double s = (a + b + c) / 2;
    return sqrt(s * (s - a) * (s - b) * (s - c));
}
int main() 
{
    double side1, side2, side3;
    cout << "Enter the lengths of the three sides of the triangle: \n";
    cin >> side1 >> side2 >> side3;
    double area = calculateTriangleArea(side1, side2, side3);
    cout << "Area of the triangle: " << area <<"\n";
    return 0;
}
output:-
Enter the lengths of the three sides of the triangle: 
3
4
5
Area of the triangle: 6
============================================================================================================================================================================================