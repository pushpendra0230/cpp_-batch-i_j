cpp test date 10 feb 2024.......
========================================================================================

q.1. Create a for loop that prints the square of numbers from 1 to 5....

#include <bits/stdc++.h>
using namespace std;
int main()
{
    for (int i = 1; i <= 5; i++) 
    {
        cout <<" square of " << i  << " is " <<i*i <<"\n";
    }
    return 0;
}
output:-
 square of 1 is 1
 square of 2 is 4
 square of 3 is 9
 square of 4 is 16
 square of 5 is 25
----------------------------------------------------------------------------------------------
q.2. Create a C++ program that takes an integer as input and prints whether it is positive, 
negative, or zero using `if-else` statements.....


#include<bits/stdc++.h>

using namespace std;

int main()
{
    int number;
    cout<<"enter a number\n";
    cin>>number;
    
    
    if(number>0)
    {
        cout<<"the number is positive\n";
    }
    else if(number<0)
    {
        cout<<"the number is negative\n";
    }
    else
    {
        cout<<"the number is zero";
    }
    return 0;
}
output:-
enter a number
-999
the number is negative
----------------------------------------------------------------------
q.3. Write a program that takes the current time as input and prints a message based on whether 
it's morning, afternoon, evening, or night...


#include <bits/stdc++.h>
using namespace std;

int main() 
{
    // Get the current time point in UTC
    auto currentTimePoint = chrono::system_clock::now();

    // Get the time zone offset for IST (Indian Standard Time)
    constexpr int istOffsetHours = 5;
    constexpr int istOffsetMinutes = 30;

    // Adjust the current time point for IST
    currentTimePoint += chrono::hours(istOffsetHours) + chrono::minutes(istOffsetMinutes);

    // Convert the time point to a time_t object
    time_t currentTime = chrono::system_clock::to_time_t(currentTimePoint);

    // Convert the time_t object to a tm structure
    tm* localTime = std::localtime(&currentTime);
    
    // Extract the hour part
    int hour = localTime->tm_hour;
    
    if(hour>=6 && hour<12)
    {
        cout<<"It's currently Morning .";
    }
    else if(hour>=12 && hour<18)
    {
        cout<<"It's currently After Noon .";
    }
    else if(hour>=18 && hour<21)
    {
        cout<<"It's currently Evening .";
    }
    else if(hour>=21 && hour<=24)
    {
        cout<<"It's currently Night .";
    }
    else if(hour>=0 && hour<3)
    {
        cout<<"It's currently Midnight .";
    }
    else if(hour>=3 && hour<6)
    {
        cout<<"It's currently Early Morning .";
    }
    return 0;
}
output:-
It's currently After Noon .
------------------------------------------------------------------------
q.4. Develop a program that checks the availability of a product in a store. If the product is in 
stock(greater than 1) and the user has a valid membership, they can purchase it; otherwise, 
display an "Out of stock" message.....


#include<bits/stdc++.h>
using namespace std;

int main() 
{
    try 
    {
        int stocks = 100, stck;
        int membership_code = 1000, mbm;
        
        cout << "Enter the number of stocks you want to purchase and enter your membership code:\n";
        cin >> stck >> mbm;
        
        if (mbm != membership_code)
        {
            throw runtime_error("Sir,Please enter a valid membership code.\n");
        }
        else if (stocks < 100) 
        {
            throw invalid_argument("Sir, The Stock Is Out.\n");
        }
        else if (stck > stocks) 
        {
            throw runtime_error("Sir, you are demanding more than the stock.\n");
        }
        else 
        {
            cout << "Stock purchased: " << stck << "\n";
            stocks = stocks - stck;
            cout << "Available Stocks: " << stocks << "\n";
        }
    }
    catch(const exception & e) 
    {
        cerr << "Error: " << e.what() << "\n";
    }

    return 0;
}
output:-
Enter the number of stocks you want to purchase and enter your membership code:
89
1000
Stock purchased: 89
Available Stocks: 11
------------------------------------------------------------------------------------------------------------------------------
q.5. Create a basic ATM system where the user can withdraw money. Use if-else statements to 
check the account balance and handle withdrawal limits....


#include<bits/stdc++.h>
using namespace std;

int main() 
{
    try 
{
        int withdraw, account = 100000;
        cout << "Enter the amount you want to withdraw:\n";
        cin >> withdraw;

        if (withdraw > account) 
        {
            throw runtime_error("Insufficient Balance.");
        }
 else if (account < 500) 
        {
            throw runtime_error("Insufficient Balance (Account Balance is less than 500).");
        }
 else if ((withdraw % 500) != 0) 
        {
            throw invalid_argument("This amount can be given because this amount is Not in multiple of 5.");
        }
 else
        {
            account = account - withdraw;
            cout << "Withdraw amount: " << withdraw << "\n";
            cout << "Account Balance left: " << account;
        }
}
    catch (const exception& e) 
    {
        cerr << "Error: " << e.what() << "\n";
    }

    return 0;
}
output:-
Enter the amount you want to withdraw:
78000
Withdraw amount: 78000
Account Balance left: 22000
------------------------------------------------------------------------------------------------------------------------
q.6. Write a for loop that prints numbers from 1 to 10...

#include<bits/stdc++.h>
using namespace std;

int main() 
{
    for(int i=1; i<=10; i++)
    {
        cout<<i<<"\n";
    }
    return 0;
}
output:-
1
2
3
4
5
6
7
8
9
10
---------------------------------------------------------------------------------------------------
q.7. Create a for loop that counts down from 10 to 1 and prints each number....


#include<bits/stdc++.h>
using namespace std;

int main() 
{
    for(int i=10; i>=1; i--)
    {
        cout<<i<<"\n";
    }
    return 0;
}
output:-
10
9
8
7
6
5
4
3
2
1
----------------------------------------------------------------------------------------------------
q.8. Write a for loop to print even numbers from 2 to 20.......


#include<bits/stdc++.h>
using namespace std;

int main() 
{
    for(int i=2; i<=20; i++)
    if(i%2==0)
    {
        cout<<i<<"\n";
    }
    return 0;
}
output:-
2
4
6
8
10
12
14
16
18
20
------------------------------------------------------------------------
q.9. Create a for loop to print the first 5 multiples of 3.......


#include<bits/stdc++.h>
using namespace std;

int main() 
{
    cout << "The first 5 multiples of 3 are:" <<"\n";

    for (int i = 1; i <= 5; i++) 
    {
       cout << "3 x " << i << " = " << 3 * i <<"\n";
    }
    return 0;
}
output:-
The first 5 multiples of 3 are:
3 x 1 = 3
3 x 2 = 6
3 x 3 = 9
3 x 4 = 12
3 x 5 = 15
---------------------------------------------------------------------------------
q.10. Write a for loop to calculate the sum of numbers from 1 to 10.......


#include<bits/stdc++.h>
using namespace std;

int main() 
   {
    int sum = 0;

    for (int i = 1; i <= 10; ++i) 
    {
        sum += i;
    }

    cout << "The sum of numbers from 1 to 10 is: " << sum << "\n";

    return 0;
}
output:-
The sum of numbers from 1 to 10 is: 55
---------------------------------------------------------------------------------------
q.11. Write a program that checks if a given year is a leap year or not. Use an `if-else` statement 
and logical operators to make the determination......


#include<bits/stdc++.h>

using namespace std;

int main()
{
    int year;
    cout<<"enter a year:-\n";
    cin>>year;
    if(year%4==0&&year%100!=0||(year%400==0))
    {
        cout<<year<<" this year is a leap year\n";
    }
    else
    {
        cout<<" this year is not a leap year\n";
    }
    return 0;
}
output:-
enter a year:-
1600
1600 this year is a leap year
=========================================================================================================================================
